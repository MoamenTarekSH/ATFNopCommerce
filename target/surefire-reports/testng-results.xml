<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="21" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-06T05:27:37 EET" name="NopCommerce Regression Suite" finished-at="2024-01-06T05:28:41 EET" duration-ms="63474">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.AddToCartTest@4135c3b]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.AddToComperTest@6302bbb1]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.AddToWishTest@31304f14]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.ChangeCurrencyTest@34a3d150]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.ContactUsTest@2a4fb17b]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.EmailFriendTest@459e9125]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.HoverMenuTest@5c6648b0]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.ReviewTest@7cc0cdad]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.SearchAutoSuggestTest@6f1de4c7]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.SearchTest@128d2484]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Tests.UserRegisterationTest@35d019a3]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-01-06T05:27:37 EET" name="Regression Test" finished-at="2024-01-06T05:28:41 EET" duration-ms="63474">
      <class name="Tests.ContactUsTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.ContactUsTest@2a4fb17b]" started-at="2024-01-06T05:28:29 EET" name="setUpClass" finished-at="2024-01-06T05:28:29 EET" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="TestContactUs()[pri:0, instance:Tests.ContactUsTest@2a4fb17b]" started-at="2024-01-06T05:28:29 EET" name="TestContactUs" finished-at="2024-01-06T05:28:30 EET" duration-ms="1430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestContactUs -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTest@2a4fb17b]" started-at="2024-01-06T05:28:30 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:30 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestContactUs status=SUCCESS method=ContactUsTest.TestContactUs()[pri:0, instance:Tests.ContactUsTest@2a4fb17b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.ContactUsTest@2a4fb17b]" started-at="2024-01-06T05:28:30 EET" name="tearDownClass" finished-at="2024-01-06T05:28:30 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.ContactUsTest -->
      <class name="Tests.UserRegisterationTest">
        <test-method is-config="true" signature="OpenWebSite(java.lang.String)[pri:0, instance:Tests.UserRegisterationTest@35d019a3]" started-at="2024-01-06T05:27:04 EET" name="OpenWebSite" finished-at="2024-01-06T05:27:37 EET" duration-ms="33198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenWebSite -->
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.UserRegisterationTest@35d019a3]" started-at="2024-01-06T05:27:38 EET" name="setUpClass" finished-at="2024-01-06T05:27:38 EET" duration-ms="601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="UserCanRegisterSuccssfully()[pri:0, instance:Tests.UserRegisterationTest@35d019a3]" started-at="2024-01-06T05:27:38 EET" name="UserCanRegisterSuccssfully" finished-at="2024-01-06T05:27:41 EET" duration-ms="2770" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Tests.UserRegisterationTest.UserCanRegisterSuccssfully(UserRegisterationTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserCanRegisterSuccssfully -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.UserRegisterationTest@35d019a3]" started-at="2024-01-06T05:27:41 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:27:41 EET" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserCanRegisterSuccssfully status=FAILURE method=UserRegisterationTest.UserCanRegisterSuccssfully()[pri:0, instance:Tests.UserRegisterationTest@35d019a3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="TestLoginSuccssfully()[pri:1, instance:Tests.UserRegisterationTest@35d019a3]" started-at="2024-01-06T05:27:41 EET" name="TestLoginSuccssfully" finished-at="2024-01-06T05:27:43 EET" duration-ms="1937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestLoginSuccssfully -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.UserRegisterationTest@35d019a3]" started-at="2024-01-06T05:27:43 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:27:43 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestLoginSuccssfully status=SUCCESS method=UserRegisterationTest.TestLoginSuccssfully()[pri:1, instance:Tests.UserRegisterationTest@35d019a3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.UserRegisterationTest@35d019a3]" started-at="2024-01-06T05:27:43 EET" name="tearDownClass" finished-at="2024-01-06T05:27:43 EET" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.UserRegisterationTest -->
      <class name="Tests.HoverMenuTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.HoverMenuTest@5c6648b0]" started-at="2024-01-06T05:28:30 EET" name="setUpClass" finished-at="2024-01-06T05:28:30 EET" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="TestHoverComputersMenu()[pri:0, instance:Tests.HoverMenuTest@5c6648b0]" started-at="2024-01-06T05:28:30 EET" name="TestHoverComputersMenu" finished-at="2024-01-06T05:28:31 EET" duration-ms="1021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestHoverComputersMenu -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.HoverMenuTest@5c6648b0]" started-at="2024-01-06T05:28:31 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:31 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestHoverComputersMenu status=SUCCESS method=HoverMenuTest.TestHoverComputersMenu()[pri:0, instance:Tests.HoverMenuTest@5c6648b0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.HoverMenuTest@5c6648b0]" started-at="2024-01-06T05:28:31 EET" name="tearDownClass" finished-at="2024-01-06T05:28:31 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.HoverMenuTest -->
      <class name="Tests.SearchAutoSuggestTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.SearchAutoSuggestTest@6f1de4c7]" started-at="2024-01-06T05:28:31 EET" name="setUpClass" finished-at="2024-01-06T05:28:31 EET" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="TestSearchAutoSuggest()[pri:0, instance:Tests.SearchAutoSuggestTest@6f1de4c7]" started-at="2024-01-06T05:28:31 EET" name="TestSearchAutoSuggest" finished-at="2024-01-06T05:28:34 EET" duration-ms="3017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSearchAutoSuggest -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.SearchAutoSuggestTest@6f1de4c7]" started-at="2024-01-06T05:28:34 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:34 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestSearchAutoSuggest status=SUCCESS method=SearchAutoSuggestTest.TestSearchAutoSuggest()[pri:0, instance:Tests.SearchAutoSuggestTest@6f1de4c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.SearchAutoSuggestTest@6f1de4c7]" started-at="2024-01-06T05:28:34 EET" name="tearDownClass" finished-at="2024-01-06T05:28:34 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.SearchAutoSuggestTest -->
      <class name="Tests.CheckOutRegisteredTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" started-at="2024-01-06T05:27:43 EET" name="setUpClass" finished-at="2024-01-06T05:27:43 EET" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="SearchItemToCheckOut()[pri:0, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" started-at="2024-01-06T05:27:43 EET" name="SearchItemToCheckOut" finished-at="2024-01-06T05:27:51 EET" duration-ms="8039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchItemToCheckOut -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" started-at="2024-01-06T05:27:51 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:27:51 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchItemToCheckOut status=SUCCESS method=CheckOutRegisteredTest.SearchItemToCheckOut()[pri:0, instance:Tests.CheckOutRegisteredTest@2a65fe7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="OpenCartPageThenCheckPage()[pri:1, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" started-at="2024-01-06T05:27:52 EET" name="OpenCartPageThenCheckPage" finished-at="2024-01-06T05:27:53 EET" duration-ms="1149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenCartPageThenCheckPage -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" started-at="2024-01-06T05:27:53 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:27:53 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OpenCartPageThenCheckPage status=SUCCESS method=CheckOutRegisteredTest.OpenCartPageThenCheckPage()[pri:1, instance:Tests.CheckOutRegisteredTest@2a65fe7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="TestCheckOutSteps()[pri:2, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" started-at="2024-01-06T05:27:53 EET" name="TestCheckOutSteps" finished-at="2024-01-06T05:27:53 EET" duration-ms="417" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable: Element is not currently visible and may not be manipulated
  (Session info: chrome=120.0.6099.109)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [be0009fbcaf334df9b28900e2cba3c79, clickElement {id=7563FD654F8110061D8765BFB55908CB_element_274}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.109, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\MOAMEN~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50893/devtoo..., se:cdpVersion: 120.0.6099.109, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (be0009fbcaf334df9b28900e2cba3c79)] -> xpath: //*[@id="BillingNewAddress_CountryId"]]] -> xpath: .//option[@value = "201"]]
Session ID: be0009fbcaf334df9b28900e2cba3c79]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable: Element is not currently visible and may not be manipulated
  (Session info: chrome=120.0.6099.109)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [be0009fbcaf334df9b28900e2cba3c79, clickElement {id=7563FD654F8110061D8765BFB55908CB_element_274}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.109, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\MOAMEN~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50893/devtoo..., se:cdpVersion: 120.0.6099.109, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (be0009fbcaf334df9b28900e2cba3c79)] -> xpath: //*[@id="BillingNewAddress_CountryId"]]] -> xpath: .//option[@value = "201"]]
Session ID: be0009fbcaf334df9b28900e2cba3c79
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at org.openqa.selenium.support.ui.Select.setSelected(Select.java:315)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:195)
at PagesObjects.CheckOutPage.CheckOutInput(CheckOutPage.java:102)
at Tests.CheckOutRegisteredTest.TestCheckOutSteps(CheckOutRegisteredTest.java:53)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCheckOutSteps -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" started-at="2024-01-06T05:27:53 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:27:53 EET" duration-ms="156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCheckOutSteps status=FAILURE method=CheckOutRegisteredTest.TestCheckOutSteps()[pri:2, instance:Tests.CheckOutRegisteredTest@2a65fe7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.CheckOutRegisteredTest@2a65fe7c]" started-at="2024-01-06T05:27:53 EET" name="tearDownClass" finished-at="2024-01-06T05:27:53 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.CheckOutRegisteredTest -->
      <class name="Tests.ReviewTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.ReviewTest@7cc0cdad]" started-at="2024-01-06T05:28:36 EET" name="setUpClass" finished-at="2024-01-06T05:28:36 EET" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="TestSearchAutoSuggest()[pri:0, instance:Tests.ReviewTest@7cc0cdad]" started-at="2024-01-06T05:28:36 EET" name="TestSearchAutoSuggest" finished-at="2024-01-06T05:28:40 EET" duration-ms="3162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSearchAutoSuggest -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.ReviewTest@7cc0cdad]" started-at="2024-01-06T05:28:40 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:40 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestSearchAutoSuggest status=SUCCESS method=ReviewTest.TestSearchAutoSuggest()[pri:0, instance:Tests.ReviewTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="TestMakingReview()[pri:1, instance:Tests.ReviewTest@7cc0cdad]" started-at="2024-01-06T05:28:40 EET" name="TestMakingReview" finished-at="2024-01-06T05:28:41 EET" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMakingReview -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.ReviewTest@7cc0cdad]" started-at="2024-01-06T05:28:41 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:41 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestMakingReview status=SUCCESS method=ReviewTest.TestMakingReview()[pri:1, instance:Tests.ReviewTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.ReviewTest@7cc0cdad]" started-at="2024-01-06T05:28:41 EET" name="tearDownClass" finished-at="2024-01-06T05:28:41 EET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.ReviewTest -->
      <class name="Tests.AddToWishTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.AddToWishTest@31304f14]" started-at="2024-01-06T05:28:16 EET" name="setUpClass" finished-at="2024-01-06T05:28:16 EET" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="TestSearch()[pri:0, instance:Tests.AddToWishTest@31304f14]" started-at="2024-01-06T05:28:16 EET" name="TestSearch" finished-at="2024-01-06T05:28:16 EET" duration-ms="529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSearch -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToWishTest@31304f14]" started-at="2024-01-06T05:28:16 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:16 EET" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestSearch status=SUCCESS method=AddToWishTest.TestSearch()[pri:0, instance:Tests.AddToWishTest@31304f14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="TestAddToWish()[pri:1, instance:Tests.AddToWishTest@31304f14]" started-at="2024-01-06T05:28:16 EET" name="TestAddToWish" finished-at="2024-01-06T05:28:21 EET" duration-ms="4205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAddToWish -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToWishTest@31304f14]" started-at="2024-01-06T05:28:21 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:21 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestAddToWish status=SUCCESS method=AddToWishTest.TestAddToWish()[pri:1, instance:Tests.AddToWishTest@31304f14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="TestWishList()[pri:2, instance:Tests.AddToWishTest@31304f14]" started-at="2024-01-06T05:28:21 EET" name="TestWishList" finished-at="2024-01-06T05:28:25 EET" duration-ms="4375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestWishList -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToWishTest@31304f14]" started-at="2024-01-06T05:28:25 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:25 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestWishList status=SUCCESS method=AddToWishTest.TestWishList()[pri:2, instance:Tests.AddToWishTest@31304f14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.AddToWishTest@31304f14]" started-at="2024-01-06T05:28:25 EET" name="tearDownClass" finished-at="2024-01-06T05:28:25 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.AddToWishTest -->
      <class name="Tests.ChangeCurrencyTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.ChangeCurrencyTest@34a3d150]" started-at="2024-01-06T05:28:25 EET" name="setUpClass" finished-at="2024-01-06T05:28:25 EET" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="TestSearch()[pri:0, instance:Tests.ChangeCurrencyTest@34a3d150]" started-at="2024-01-06T05:28:25 EET" name="TestSearch" finished-at="2024-01-06T05:28:25 EET" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSearch -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.ChangeCurrencyTest@34a3d150]" started-at="2024-01-06T05:28:25 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:25 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestSearch status=SUCCESS method=ChangeCurrencyTest.TestSearch()[pri:0, instance:Tests.ChangeCurrencyTest@34a3d150] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="TestChangeCurrency()[pri:1, instance:Tests.ChangeCurrencyTest@34a3d150]" started-at="2024-01-06T05:28:25 EET" name="TestChangeCurrency" finished-at="2024-01-06T05:28:29 EET" duration-ms="3321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestChangeCurrency -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.ChangeCurrencyTest@34a3d150]" started-at="2024-01-06T05:28:29 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:29 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestChangeCurrency status=SUCCESS method=ChangeCurrencyTest.TestChangeCurrency()[pri:1, instance:Tests.ChangeCurrencyTest@34a3d150] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.ChangeCurrencyTest@34a3d150]" started-at="2024-01-06T05:28:29 EET" name="tearDownClass" finished-at="2024-01-06T05:28:29 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.ChangeCurrencyTest -->
      <class name="Tests.AddToComperTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.AddToComperTest@6302bbb1]" started-at="2024-01-06T05:28:07 EET" name="setUpClass" finished-at="2024-01-06T05:28:07 EET" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="SearchItemOneToComparer()[pri:0, instance:Tests.AddToComperTest@6302bbb1]" started-at="2024-01-06T05:28:07 EET" name="SearchItemOneToComparer" finished-at="2024-01-06T05:28:11 EET" duration-ms="4824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchItemOneToComparer -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToComperTest@6302bbb1]" started-at="2024-01-06T05:28:11 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:11 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchItemOneToComparer status=SUCCESS method=AddToComperTest.SearchItemOneToComparer()[pri:0, instance:Tests.AddToComperTest@6302bbb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="SearchItemTwoToCompare()[pri:1, instance:Tests.AddToComperTest@6302bbb1]" started-at="2024-01-06T05:28:11 EET" name="SearchItemTwoToCompare" finished-at="2024-01-06T05:28:15 EET" duration-ms="3467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchItemTwoToCompare -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToComperTest@6302bbb1]" started-at="2024-01-06T05:28:15 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:15 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchItemTwoToCompare status=SUCCESS method=AddToComperTest.SearchItemTwoToCompare()[pri:1, instance:Tests.AddToComperTest@6302bbb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="TestComparePage()[pri:3, instance:Tests.AddToComperTest@6302bbb1]" started-at="2024-01-06T05:28:15 EET" name="TestComparePage" finished-at="2024-01-06T05:28:16 EET" duration-ms="843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestComparePage -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToComperTest@6302bbb1]" started-at="2024-01-06T05:28:16 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:16 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestComparePage status=SUCCESS method=AddToComperTest.TestComparePage()[pri:3, instance:Tests.AddToComperTest@6302bbb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.AddToComperTest@6302bbb1]" started-at="2024-01-06T05:28:16 EET" name="tearDownClass" finished-at="2024-01-06T05:28:16 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.AddToComperTest -->
      <class name="Tests.SearchTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.SearchTest@128d2484]" started-at="2024-01-06T05:28:36 EET" name="setUpClass" finished-at="2024-01-06T05:28:36 EET" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="TestSearch()[pri:0, instance:Tests.SearchTest@128d2484]" started-at="2024-01-06T05:28:36 EET" name="TestSearch" finished-at="2024-01-06T05:28:36 EET" duration-ms="620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSearch -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.SearchTest@128d2484]" started-at="2024-01-06T05:28:36 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:36 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestSearch status=SUCCESS method=SearchTest.TestSearch()[pri:0, instance:Tests.SearchTest@128d2484] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.SearchTest@128d2484]" started-at="2024-01-06T05:28:36 EET" name="tearDownClass" finished-at="2024-01-06T05:28:36 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.SearchTest -->
      <class name="Tests.AddToCartTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.AddToCartTest@4135c3b]" started-at="2024-01-06T05:27:53 EET" name="setUpClass" finished-at="2024-01-06T05:27:53 EET" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="SearchItemOneToCart()[pri:0, instance:Tests.AddToCartTest@4135c3b]" started-at="2024-01-06T05:27:53 EET" name="SearchItemOneToCart" finished-at="2024-01-06T05:27:58 EET" duration-ms="4652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchItemOneToCart -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToCartTest@4135c3b]" started-at="2024-01-06T05:27:58 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:27:58 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchItemOneToCart status=SUCCESS method=AddToCartTest.SearchItemOneToCart()[pri:0, instance:Tests.AddToCartTest@4135c3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="SearchItemTwoToCart()[pri:1, instance:Tests.AddToCartTest@4135c3b]" started-at="2024-01-06T05:27:58 EET" name="SearchItemTwoToCart" finished-at="2024-01-06T05:28:06 EET" duration-ms="7588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchItemTwoToCart -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToCartTest@4135c3b]" started-at="2024-01-06T05:28:06 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:06 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchItemTwoToCart status=SUCCESS method=AddToCartTest.SearchItemTwoToCart()[pri:1, instance:Tests.AddToCartTest@4135c3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="TestCartPage()[pri:3, instance:Tests.AddToCartTest@4135c3b]" started-at="2024-01-06T05:28:06 EET" name="TestCartPage" finished-at="2024-01-06T05:28:07 EET" duration-ms="1144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCartPage -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.AddToCartTest@4135c3b]" started-at="2024-01-06T05:28:07 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:07 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCartPage status=SUCCESS method=AddToCartTest.TestCartPage()[pri:3, instance:Tests.AddToCartTest@4135c3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.AddToCartTest@4135c3b]" started-at="2024-01-06T05:28:07 EET" name="tearDownClass" finished-at="2024-01-06T05:28:07 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.AddToCartTest -->
      <class name="Tests.EmailFriendTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Tests.EmailFriendTest@459e9125]" started-at="2024-01-06T05:28:34 EET" name="setUpClass" finished-at="2024-01-06T05:28:34 EET" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14b7786]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="TestEmailFriend()[pri:0, instance:Tests.EmailFriendTest@459e9125]" started-at="2024-01-06T05:28:34 EET" name="TestEmailFriend" finished-at="2024-01-06T05:28:36 EET" duration-ms="1445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestEmailFriend -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:Tests.EmailFriendTest@459e9125]" started-at="2024-01-06T05:28:36 EET" name="ScreenShotOnFailure" finished-at="2024-01-06T05:28:36 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestEmailFriend status=SUCCESS method=EmailFriendTest.TestEmailFriend()[pri:0, instance:Tests.EmailFriendTest@459e9125] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Tests.EmailFriendTest@459e9125]" started-at="2024-01-06T05:28:36 EET" name="tearDownClass" finished-at="2024-01-06T05:28:36 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Tests.EmailFriendTest -->
    </test> <!-- Regression Test -->
  </suite> <!-- NopCommerce Regression Suite -->
</testng-results>
